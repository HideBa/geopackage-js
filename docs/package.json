{
  "name": "geopackage-browserify-demo",
  "dependencies": {
    "@babel/core": "^7.10.4",
    "@babel/preset-env": "^7.10.4",
    "@babel/runtime": "^7.10.4",
    "@mapbox/vector-tile": "^1.3.1",
    "@ngageoint/geopackage": "../",
    "@types/lodash": "^4.14.157",
    "async": "^2.0.0-rc.5",
    "babelify": "^10.0.0",
    "browserify-fs": "^1.0.0",
    "cross-env": "^7.0.2",
    "file-saver": "^2.0.0-rc.3",
    "file-type": "12.4.0",
    "jquery": "3.4.1",
    "leaflet": "1.3.4",
    "leaflet-basemaps": "^0.3.1",
    "leaflet-mapkey-icon": "github:mapshakers/leaflet-mapkey-icon",
    "mustache": "^2.2.1",
    "proj4": "2.4.3",
    "promise-polyfill": "^6.0.2",
    "reproject": "^1.1.1",
    "simple-server": "^1.1.1",
    "tsify": "^4.0.2",
    "webworkify": "^1.5.0"
  },
  "no": {
    "@ngageoint/geojson-to-geopackage": "../converters/geojson",
    "@ngageoint/kml-to-geopackage": "../converters/kml",
    "@ngageoint/shapefile-to-geopackage": "../converters/shapefile",
    "mbtiles-to-geopackage": "../converters/mbtiles",
    "shapefile-to-geopackage": "../converters/shapefile",
    "pbf-to-geopackage": "../converters/pbf"
  },
  "devDependencies": {
    "@types/node": "^14.0.18",
    "babel-runtime": "^6.26.0",
    "browserify": "^14.5.0",
    "browserify-css": "^0.9.1",
    "tsify": "^4.0.2",
    "typedoc": "^0.15.4",
    "typescript": "3.7.5"
  },
  "browserify": {
    "transform": [
      "browserify-css"
    ]
  },
  "scripts": {
    "create": "npm install --no-optional && npm run typedoc --options typedoc.json",
    "postinstall": "npm run build",
    "prebuild": "mkdir -p vendor/leaflet-mapkey-icon; cp -R node_modules/leaflet-mapkey-icon/dist/ vendor/leaflet-mapkey-icon",
    "copySqlJsWasm": "cp ./node_modules/@ngageoint/geopackage/dist/sql-wasm.wasm public/",
    "build": "npm run copySqlJsWasm; browserify index.js --standalone gp --exclude inquirer --exclude node-expat -t [ babelify --presets [@babel/preset-env] ] -o gp.js",
    "clean": "rm -rf ./node_modules",
    "tsc": "rm -rf ./built && tsc",
    "typedoc": "rm -rf ./api-docs; typedoc --tsconfig ../tsconfig.json --mode file --out api-docs ../index.ts"
  }
}
